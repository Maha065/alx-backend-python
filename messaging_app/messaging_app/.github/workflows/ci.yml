name: Django CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: test_db
          MYSQL_USER: test_user
          MYSQL_PASSWORD: test_password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h 127.0.0.1 -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    env:
      DATABASE_NAME: test_db
      DATABASE_USER: test_user
      DATABASE_PASSWORD: test_password
      DATABASE_HOST: 127.0.0.1
      DATABASE_PORT: 3306
      DJANGO_SETTINGS_MODULE: messaging_app.settings
      PYTHONPATH: ${{ github.workspace }}/messaging_app

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./messaging_app
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install flake8 coverage pytest pytest-cov

      - name: Wait for MySQL to be ready
        run: |
          sudo apt-get install -y mysql-client
          until mysqladmin ping -h 127.0.0.1 -uroot -proot --silent; do
            echo "Waiting for database connection..."
            sleep 5
          done

      - name: Run flake8 lint check
        working-directory: ./messaging_app
        run: |
          echo "Running flake8 linting..."
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics
        # The first flake8 command fails the build on serious errors (E9, F63, F7, F82)
        # The second shows general style warnings but does not fail the build.

      - name: Apply database migrations
        working-directory: ./messaging_app
        run: |
          python manage.py migrate

      - name: Run Django tests with coverage
        working-directory: ./messaging_app
        run: |
          coverage run --source='.' manage.py test
          coverage xml -o coverage.xml
          coverage report -m

      - name: Upload test and coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: test-and-coverage-reports
          path: |
            messaging_app/coverage.xml
            messaging_app/.coverage
